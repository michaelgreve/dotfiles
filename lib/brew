#!/usr/bin/env bash


run_brew() {
if type_exists 'brew'; then
    e_header "Updating Homebrew ..."
        [[ $? ]] && e_success "Done"

        e_header "Checking status of desired Homebrew formulae..."
        local list_formulae
        local -a missing_formulae
        local -a desired_formulae=(
        	# GNU core utilities (remember to add to path)
    		'coreutils'
    		# GNU utilities
    		'binutils'
			'diffutils'
			'ed --with-default-names'
			'findutils --with-default-names'
			'gawk'
			'gnu-indent --with-default-names'
			'gnu-sed --with-default-names'
			'gnu-tar --with-default-names'
			'gnu-which --with-default-names'
			'gnutls'
			'grep --with-default-names'
			'gzip'
			'screen'
			'watch'
			'wdiff --with-gettext'
			'wget'

			'python3'
			'bash'
			'bash-completion2'
			'git --with-brewed-curl --with-brewed-openssl'
			'curl --with-openssl --with-libssh2'
			'moreutils'
			'composer'
			'htop'
			'gnu-sed --with-default-names'
			'grep --with-default-names'
			'findutils --with-default-names'
			'dockutil'
			'wget --with-iri'
			'wifi-password'
			'vim --with-override-system-vi'
			'lastpass-cli'
			'homebrew/dupes/openssh'
			'homebrew/dupes/screen'

            'coreutils' # GNU core utilities (those that come with OS X are outdated)
            'git'
            'ack'
            'bash'
            'bash-completion'
            'ffmpeg'
            'graphicsmagick'
            'jpeg'
            'macvim --override-system-vim'
            'node'
            'optipng'
            'phantomjs'
            'tree'
            'wget'
        )

        for index in ${!desired_formulae[*]}
        do
            if ! formula_exists ${desired_formulae[$index]}; then
                # Store the name (and options) of every missing formula
                missing_formulae=("${missing_formulae[@]}" "${desired_formulae[$index]}")
            fi
        done

        if [[ "$missing_formulae" ]]; then
            # Convert the array of missing formula into a list of space-separate strings
            list_formulae=$( printf "%s " "${missing_formulae[@]}" )

            e_header "Installing missing Homebrew formulae ..."
            # Install all missing formulae
            brew install $list_formulae

            [[ $? ]] && e_success "Done"
        fi

        # use latest rsync rather than out-dated OS X rsync
        # install separately from the main formulae list to fix gh-19
        brew install https://raw.github.com/Homebrew/homebrew-dupes/master/rsync.rb

        # Remove outdated versions from the Cellar
        brew cleanup
    else
        printf "\n"
        e_error "Error: Homebrew not found."
        printf "Aborting...\n"
        exit
    fi

}

else

fi	
}
### Install Brews

# Install command-line tools using Homebrew.

# Check if Homebrew is already installed
	e_header "Homebrew is not installed, getting latest version."
	/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
	[[ $? ]] && e_success "Homebrew installed"
else
	e_header "Updating Homebrew ..."
	brew update
	[[ $? ]] && e_success "Done"
fi;

# Tap casks
brew tap homebrew/versions
brew tap homebrew/dupes

# Upgrade any already-installed formulae.
e_header "Updating any existing Homebrew formulae ..."
brew upgrade
[[ $? ]] && e_success "Done"

apps=(
	coreutils
	python3
	bash
	bash-completion2
	git --with-brewed-curl --with-brewed-openssl
	curl --with-openssl --with-libssh2
	moreutils
	composer
	htop
	gnu-sed --with-default-names
	grep --with-default-names
	findutils --with-default-names
	dockutil
	wget --with-iri
	wifi-password
	vim --with-override-system-vi
	lastpass-cli
	homebrew/dupes/openssh
	homebrew/dupes/screen
#	homebrew/php/php56 --with-mssql --with-homebrew-curl --with-homebrew-libxml2 --with-pear
)
#brew install "${apps[@]}"
unset apps

ln -s /usr/local/bin/gsha256sum /usr/local/bin/sha256sum

# Switch to using brew-installed bash as default shell
if ! fgrep -q '/usr/local/bin/bash' /etc/shells; then
  echo '/usr/local/bin/bash' | sudo tee -a /etc/shells;
  chsh -s /usr/local/bin/bash;
fi;