[core]
    excludesfile = ~/.dotfiles/git/gitignore
    editor = vim

[user]
    name = "Michael Greve"
    email = "michael@grevens.dk"

[diff]

[color]
    ui = auto

[alias]
    # Staging
    a = add
    aa = add --all

    # Branch
    br = branch --all
    branch-name = rev-parse --abbrev-ref HEAD
    branch-diff = diff master...HEAD
    branch-files = "!git diff master...HEAD --name-status | sed '/^D/d ; s/^.\\s\\+//'"

    s = status -sb

    ci = commit --verbose
    cim = commit --verbose -m
    cm = !git add -A && git commit -m

    pom = push origin master

    co = checkout
    cob = checkout -b

    # Diff
    d = diff --color-words
    dc = diff --cached
    df = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

    ec = config --global -e
    up = !git pull --rebase --prune $@ && git submodule update --init --recursive

    save = !git add -A && git commit -m 'SAVEPOINT'
    wip = !git add -u && git commit -m "WIP" 

    undo = reset HEAD~1 --mixed
    amend = commit -a --amend
    wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
    bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"
    bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"

    # Custom graph log (append any tree-ish)
    graph = log --pretty=nice --date-order --graph
    # Custom graph log for all branches
    grapha = log --pretty=nice --date-order --graph --all

    # Logging
    l = "!source ~/.dotfiles/git/githelpers && pretty_git_log"

    # Misc
    publish = "!git push --set-upstream origin $(git branch-name)"



[pager]
    # Insanely beautiful diffs ==> npm install -g diff-so-fancy
    diff = diff-so-fancy | less --tabs=4 -RFX
    show = diff-so-fancy | less --tabs=4 -RFX

[pretty]
    # tut: http://gitimmersion.com/lab_10.html
    # ref: http://linux.die.net/man/1/git-log
    # Result: <short-sha> <commit-message> (<pointer-names>) -- <commit-author-name>; <relative-time>
    nice = "%C(yellow)%h%C(reset) %C(white)%s%C(cyan)%d%C(reset) -- %an; %ar"
